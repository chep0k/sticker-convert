name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        name: Release ${{ github.ref_name }}

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: |
                sh ./get-deps-macos.sh
                pyinstaller sticker_convert.spec
                cd dist/
                zip -r9 sticker-convert-macos.zip sticker-convert-macos/
            OUT_FILE_NAME: sticker-convert-macos.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: |
                ./get-deps-windows.bat
                set
                refreshenv
                set
                pyinstaller sticker_convert.spec
                cd dist
                ../sticker_convert/bin/zip.exe -r9 sticker-convert-windows.zip sticker-convert-windows
            OUT_FILE_NAME: sticker-convert-windows.zip
            ASSET_MIME: application/zip
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}